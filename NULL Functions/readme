# SQL Query Practice: Customer and Sales Data Analysis

This repository contains SQL queries addressing various real-world business scenarios to practice essential SQL functions and techniques for data analysis.

## 📋 Project Overview

The dataset includes two tables:
- **`sales.Customers`**: Contains customer information such as `CustomerID`, `FirstName`, `LastName`, and `Score`.
- **`sales.Orders`**: Contains order details such as `OrderID`, `OrderDate`, `Quantity`, and `Sales`.

## ❓ Questions Addressed
1. 🧑‍🤝‍🧑 Combine first and last names into a single field and add 10 bonus points to each customer's score.
2. 📊 Sort customers by score in ascending order, with null values appearing last.
3. 💰 Calculate the sales price per order by dividing sales by quantity.
4. 🔍 Identify customers who have no score.
5. ✅ Identify customers who have a score.
6. 📂 List customers who have not placed any orders.

## ✨ Key Functions and Concepts Practiced

1. **🔤 String Functions:** 
   - `CONCAT`: Merging strings to form a single field.

2. **❓ Null Handling:** 
   - `COALESCE`: Replacing null values with a default value.
   - `IS NULL` and `IS NOT NULL`: Filtering null and non-null records.

3. **📈 Sorting Data:**
   - `ORDER BY`: Sorting records based on custom logic.
   - `CASE` Statements: Handling conditional logic during sorting.

4. **➗ Mathematical Operations:**
   - Arithmetic calculations and division.
   - `NULLIF`: Avoiding division by zero errors.

5. **🔗 Joins:**
   - `LEFT JOIN`: Combining data from multiple tables and retaining unmatched rows.

## 📚 What I Learned
- **🛠️ SQL Functions:** Hands-on experience with string manipulation, null handling, and conditional sorting.
- **📊 Data Analysis:** Extracted meaningful insights while handling edge cases like null values and zero quantities.
- **⚙️ Error Prevention:** Ensured robust query performance with functions like `COALESCE` and `NULLIF`.
- **🔍 Relational Operations:** Analyzed relationships between tables using joins.

Feel free to explore and suggest improvements!
